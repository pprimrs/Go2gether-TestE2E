# .github/workflows/robot-e2e.yml
name: üöÄ Robot Framework E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      env:
        description: "Target Environment (SIT / UAT / PROD)"
        required: false
        default: "SIT"
      tags:
        description: "Run only tests with specific tags (optional)"
        required: false
        default: ""

jobs:
  robot-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      # Environment variables for your app (‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å Secrets)
      BASE_URL: ${{ secrets.BASE_URL }}                # ex: https://api.sit.example.com
      API_KEY: ${{ secrets.API_KEY }}
      API_SECRET: ${{ secrets.API_SECRET }}
      RESOURCE_OWNER_ID: ${{ secrets.RESOURCE_OWNER_ID }}
      X_MSCUSTOM_NAME: ${{ secrets.X_MSCUSTOM_NAME || 'Robot' }}
      CONTENT_TYPE: ${{ secrets.CONTENT_TYPE || 'application/json' }}
      DEFAULT_PASSWORD: ${{ secrets.DEFAULT_PASSWORD || 'P@ssw0rd123' }}
      NEW_PASSWORD: ${{ secrets.NEW_PASSWORD || 'P@ssw0rd123_NEW' }}
      ENV: ${{ github.event.inputs.env || 'SIT' }}

    steps:
      # 1Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ environment.py ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞ BASE_URL ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      - name: Validate environment.py and BASE_URL
        env:
          PYTHONPATH: ${{ github.workspace }}/E2E/resources
        run: |
          python - <<'PY'
          import os, importlib
          base = os.environ.get("BASE_URL", "")
          if not base:
              raise SystemExit("‚ùå BASE_URL is missing (check your Secrets).")
          if not base.startswith(("http://", "https://")):
              raise SystemExit(f"‚ùå BASE_URL must start with http(s):// (current: {base})")
          m = importlib.import_module("environment")
          print("‚úÖ Environment.py loaded successfully.")
          print("BASE_URL =", m.BASE_URL)
          PY

      # 5Ô∏è‚É£ ‡∏£‡∏±‡∏ô Robot Framework tests
      - name: Run Robot Framework tests
        env:
          PYTHONPATH: ${{ github.workspace }}/E2E/resources
        run: |
          mkdir -p reports
          TAGS="${{ github.event.inputs.tags }}"
          if [ -n "$TAGS" ]; then
            echo "Running tests with tags: $TAGS"
            robot -d reports -V E2E/resources/environment.py --include "$TAGS" E2E/tests
          else
            echo "Running all tests..."
            robot -d reports -V E2E/resources/environment.py E2E/tests
          fi

      # 6Ô∏è‚É£ ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô artifact
      - name: Upload Robot reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports-${{ github.run_number }}
          path: reports/**

      # 7Ô∏è‚É£ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Actions
      - name: Summary
        if: always()
        run: |
          echo "## ‚úÖ Robot Framework E2E Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: \`${{ env.ENV }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- BASE_URL: \`${{ env.BASE_URL }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Included tags: \`${{ github.event.inputs.tags || 'All' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Artifact: **robot-reports-${{ github.run_number }}**" >> $GITHUB_STEP_SUMMARY
